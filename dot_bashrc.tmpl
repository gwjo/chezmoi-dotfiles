# vim: set filetype=bash
#
# NOTE: this file invokes .alias (see bottom of this file)
#
#

######################################################################
# Make the first call on the local settings file 
######################################################################

[ -f $HOME/.bashrc.local ] && . $HOME/.bashrc.local pre


############
##
## GENERNAL OPTIONS
##

# Command line edit mode is emacs
set -o emacs
#set -i vi

# Prevent file overwrite on stdout redirection
# Use '>|" to force redirection to an existing file
set -o noclobber

# Update window size after every command
shopt -s checkwinsize

# Automatically trim long paths in the prompt
PROMPT_DIRTRIM=2

# Enable history expansion with space
# eg typing !!<space> will replace !! with you last command
#bind Space:magic-space

# Turn on recursive globbing (enables ** to recurse all directories)
shopt -s globstar 2> /dev/null

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

# Turn on extended globing
shopt -s extglob

############
##
## SMARTER TAB-COMPLETION (readline bindings)
##

# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# Display matches for ambiguous patters at first tab press
bind "set show-all-if-ambiguous on"

# Immediately add a trailing slash when autocompleting symlinks to directories
bind "set mark-symlinked-directories on"

############
##
## SANE HISTORY DEFAULTS
##


# Append to the history file
shopt -s histappend

# Save multi-line commands as one command
shopt -s cmdhist

# Record each line as it gets issued
PROMPT_COMMAND='history -a'

# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
HISTTIMEFORMAT='%F %T '

# Enable incremental history search with up/down arrows (also Readline goodness)
# Learn more about this here: http://codeinthehole.com/writing/the-most-important-command-line-tip-incremental-history-searching-with-inputrc/
#bind '"\e[A": history-search-backward'
#bind '"\e[B": history-search-forward'
#bind '"\e[C": forward-char'
#bind '"\e[D": backward-char'

############
##
## BETTER DIRECTOY NAVIGATION 
##

# Prepend cd to directory names automatically
shopt -s autocd 2> /dev/null
# Correct spelling errors during tab-completion
shopt -s dirspell 2> /dev/null
# Correct spelling errors in arguments supplied to cd
shopt -s cdspell 2> /dev/null

# This defines where cd looks for targets
# Add the directories you want to have fast access to, separated by colon
# Ex: CDPATH=".:~:~/projects" will look for targets in the current working directory, in home and in the ~/projects folder
CDPATH="."

# This allows you to bookmark your favorite places across the file system
# Define a variable containing a path and you will be able to cd into it regardless of the directory you're in
shopt -s cdable_vars




#############
##
## functions

#create ff
ff () { find . -name ${1} -print ; }

_load_bash_files () {

  subdir="${HOME}/${1}"
  if [ -d "${subdir}" ]
  then
    FILES="${subdir}/*.bash"
    for func_file in $FILES
    do
      if [ -e ${func_file} ] ; then
        source ${func_file}
      fi
    done
  fi      
}


refresh-completions () { _load_bash_files ".completions"; }
refresh-functions ()   { _load_bash_files ".functions"; }
refresh ()             { source ~/.bashrc; }

# Load files
refresh-functions
refresh-completions


##
##  PROMPT
## 
if type -f starship &>/dev/null ; then
  eval "$(starship init bash)"
elif [[ -f /usr/share/git-core/contrib/completion/git-prompt.sh ]]; then
  GIT_PS1_SHOWDIRTYSTATE=1
  GIT_PS1_SHOWUPSTREAM="auto"
  GIT_PS1_SHOWCOLORHINTS=1
  source /usr/share/git-core/contrib/completion/git-prompt.sh
  PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
fi

# Need for a xterm & co if we don't make a -ls
[ -n $DISPLAY ] && {
        [ -f /etc/profile.d/color_ls.sh ] && source /etc/profile.d/color_ls.sh
         export XAUTHORITY=$HOME/.Xauthority
}

# Read first /etc/inputrc if the variable is not defined, and after the /etc/inputrc
# include the ~/.inputrc
[ -z $INPUTRC ] && export INPUTRC=/etc/inputrc

# Source global definitions
if [ -f /etc/bashrc ]; then
        . /etc/bashrc
fi


#######################################
##
## Alias
##

# vi is good, but vim is better.
# I'm in the habit of typing 'vi' but if vim is there, I'd prefer that
if [[ $(type -p vim) ]]; then
    alias vi=vim
    export EDITOR=$(type -p vim)
    export VISUAL=$(type -p vim)
else
    export EDITOR=$(type -p vi)
    export VISUAL=$(type -p vi)
fi

# Source general alias definitions
source ~/.alias

########################################
##
## MacOS customizations
##
{{ if eq .chezmoi.os "darwin" -}}

  # Homebrew "plugins"
  [[ $(type -p fasd) ]] && eval "$(fasd --init auto)"
  [[ $(type -p thefuck) ]] && eval "$(thefuck --alias)"

{{ end -}}

######################################################################
# Make the last call on the local settings file
######################################################################

[ -e $HOME/.bashrc.local ] && . $HOME/.bashrc.local post

